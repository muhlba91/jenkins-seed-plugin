plugins {
    id 'org.jenkins-ci.jpi' version '0.33.0'
}

description = "Seed Jenkins plug-in"

ext {
    jobDslVersion = '1.50'
    envInjectVersion = '1.93.1'
}

jenkinsPlugin {
    coreVersion = '2.145'                                            // Version of Jenkins core this plugin depends on.
    displayName = 'Seed Jenkins plug-in'                             // Human-readable name of plugin.
    url = 'http://wiki.jenkins-ci.org/display/JENKINS/Seed+Plugin'   // URL for plugin on Jenkins wiki or elsewhere.
    gitHubUrl = 'https://github.com/jenkinsci/seed-plugin'           // Plugin URL on GitHub. Optional.

    // The developers section is optional, and corresponds to the POM developers section.
    developers {
        developer {
            id 'dcoraboeuf'
            name 'Damien Coraboeuf'
            email 'damien.coraboeuf@gmail.com'
        }
    }
}

// Joint compilation (Java + Groovy)
sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDir "src/main/groovy" }
    }
    test {
        java { srcDirs = [] }
        groovy { srcDir "src/main/groovy" }
    }
}

dependencies {
    compile 'org.yaml:snakeyaml:1.15'
    compile 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    jenkinsPlugins "org.jenkins-ci.plugins:matrix-auth:1.4@jar"
    jenkinsPlugins 'org.jenkins-ci.plugins:cloudbees-folder:5.11@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:description-setter:1.10@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:parameterized-trigger:2.26@jar'
    jenkinsPlugins "org.jenkins-ci.plugins:envinject:${envInjectVersion}@jar"
    compile 'org.jenkins-ci.lib:envinject-lib:1.24'
    // The Job DSL
    jenkinsPlugins "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    providedCompile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}@jar"
    providedCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"

    // Testing

    jenkinsTest 'org.jenkins-ci.main:jenkins-test-harness:2.7@jar'
    jenkinsTest 'org.jenkins-ci:symbol-annotation:1.1'

    jenkinsTest 'org.jenkins-ci.plugins:junit:1.7@jar'
    jenkinsTest 'org.jenkins-ci.plugins:structs:1.1@jar'
    jenkinsTest 'org.jenkins-ci.plugins:matrix-project:1.4@jar'
    jenkinsTest "org.jenkins-ci.plugins:envinject:${envInjectVersion}"
    jenkinsTest 'org.jenkins-ci.plugins:credentials:1.22@jar'
    jenkinsTest 'org.jenkins-ci.plugins:git:2.3.5'
    // TODO SVN Disable SVN tests until plugin + JenkinsRule situation solved
    // jenkinsTest 'org.jenkins-ci.plugins:subversion:2.5.7'

    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.eclipse.jgit:org.eclipse.jgit:4.3.1.201605051710-r'
    testCompile 'org.tmatesoft.svnkit:svnkit:1.8.12'
}

// Integration tests

task integrationTest(type: Test) {
    include 'net/nemerosa/jenkins/seed/integration/**'
    include 'net/nemerosa/seed/integration/**'
}

// Exclude the integration tests from the default tests
test {
    exclude 'net/nemerosa/jenkins/seed/integration/**'
    exclude 'net/nemerosa/seed/integration/**'
}

build.dependsOn integrationTest
integrationTest.mustRunAfter test

// Copy of the pipeline demo JAR for some integration tests

task copyPipelineDemo(type: Copy, dependsOn: ':seed-pipeline-demo:jar') {
    from project(':seed-pipeline-demo').tasks.jar
    into project.file('build/integration/repository')
}

integrationTest.dependsOn copyPipelineDemo
